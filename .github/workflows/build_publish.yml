name: Build & publish

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: base-dind-2204-amd64
    #strategy:
    #  matrix:
    #    archconfig: [ x86_64, aarch64 ]
    #    #build_type: [Debug, Release]
    #  fail-fast: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Find SHA
      run: |
        if [[ "${{github.event.pull_request.head.sha}}" != "" ]]
        then
          echo "ARTIFACT_SHA=$(echo ${{github.event.pull_request.head.sha}})" >> $GITHUB_ENV
        else
          echo "ARTIFACT_SHA=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV
        fi

    - name: Install python dependencies
      run: |
        python3 -m pip install --upgrade pip
        if [ -f requirements.txt ]; then python3 -m pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        python3 -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        python3 -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    #- name: Test with pytest
    #  env:
    #    PYTHONPATH: .
    #  run: |
    #    python3 -m build
    #    python3 -m pytest

    #- name: Test with coverage
    #  env:
    #    PYTHONPATH: .
    #  run: |
    #    python3 -m pytest tests/

    - name: Build pip package
      run: |
        python3 -m build
        VERSION=$(python3 setup.py --version)
        PYVER=$(python3 --version | awk '{print $2}' | awk -F\. '{print $1 $2 }')
        echo "wheel_name=mlstelemetry-${VERSION}-${PYVER}-${PYVER}m_Linux_$(uname -m)" >> $GITHUB_ENV
        echo "built: ${{ env.wheel_name }}"

     # FIXME: add pypi publish step
     - name: Publish package
       if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
       uses: pypa/gh-action-pypi-publish@release/v1
       with:
         password: ${{ secrets.PYPI_TOKEN }}
